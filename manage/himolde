#!/usr/bin/env bash

#~~~~~~~~~~#~~~~~~~~~~#
#
# Author(s):
#   Emil Bratt BÃ¸rsting
#
# Description:
#   This script makes it easy to start/stop the local dev stack for
#   himoldeonline with one command -> $ himolde
#   You must have installed the dev stack with the designated setup-script
#   found in this reposotory
#   The script sources files from this repository using absolute paths
#
# Placement:
#   ~/.local/bin/himolde
#
#~~~~~~~~~~#~~~~~~~~~~#

export _LIB_DIR=~/himoldeonline/himoldeonline_setup_source/himoldeonline-setup/lib
export _MANAGE_LIB_DIR=~/himoldeonline/himoldeonline_setup_source/himoldeonline-setup/manage/lib
export _PLATFORM=$(uname)
source $_MANAGE_LIB_DIR/display.sh || exit 1
source $_LIB_DIR/validate.sh || exit 1
source $_LIB_DIR/system.sh || exit 1
source $_LIB_DIR/paths.sh || exit 1
source $_LIB_DIR/repositories.sh || exit 1
source $_LIB_DIR/log.sh || exit 1
source $_LIB_DIR/hostnames.sh || exit 1
source $_MANAGE_LIB_DIR/tutor.sh || exit 1
source $_MANAGE_LIB_DIR/nitro.sh || exit 1
source $_LIB_DIR/time.sh || exit 1


### Start ##################
clear
_log_init 'manage.log' "$HOME/himoldeonline/logs"



_mainloop () {
  _banner '### Manage Script for HiMolde-Online Developement Environment ###'
  echo 'Type in any number and press enter'
  _list_options \
    '1. Start HiMoldeonline Containers' \
    '2. Stop HiMoldeonline Containers' \
    '3. List Running Containers' \
    '4. Read logfile' \
    '5. Clean up logfile' \
    "6. Install Tutor" \
    "7. Install Open edX" \
    "8. Create admin user for Open edX" \
    '9. Install Nitro' \
    '10. Run Nitro init' \
    "11. Add project in $WEB_PORTAL_ROOT to nitro" \
    "12. Run composer inside $WEB_PORTAL_ROOT" \
    "13. Fix write permission for PHP inside $WEB_PORTAL_ROOT/" \
    "14. Bind-mount $EDX_PLATFORM_ROOT into the Open edX lms and cms containers" \
    "15. Add $_HOST_DEV_WEB_PORTAL to docker network: tutor_dev_default" \
    "16. Remove $_HOST_DEV_WEB_PORTAL from docker network: tutor_dev_default" \
    "17. Set Tibe-Theme as Open edX theme for Open edX containers" \
    '18. Update this script' \
    '19. Open himoldeonline-portal in VS-Code' \
    '20. Update Nitro' \
    '21. Print out Nitro Environment Info' \
    '22. Load SSH-Key to ssh-agent to fix: "Permission denied (publickey)."' \
    "23. Open $_HOST_DEV_WEB_PORTAL in browser" \
    '0. Exit'

  printf 'Number: '
  read _choice

  if [[ $_choice == '0' ]]; then
    clear; exit 0

  elif [[ $_choice == '1' ]]; then
    _banner '# Starting Containers #'
    _log_msg 'Starting HiMoldeonline Containers'
    tutor dev start --detach && sleep 2 &&
    nitro start && sleep 2 &&
    _log_msg 'OK'

  elif [[ $_choice == '2' ]]; then
    _banner '# Stopping Containers #'
    _log_msg 'Stopping HiMoldeonline Containers'
    nitro stop && sleep 2 &&
    tutor dev stop && sleep 2 &&
    _log_msg 'OK'

  elif [[ $_choice == '3' ]]; then
    if ! eval "docker ps | grep -q nitro" && ! eval "docker ps | grep -q tutor_"
    then
      echo 'There are no HiMolde containers running'
    else
      docker ps --filter 'name=tutor_dev' --filter 'name=nitro'
    fi

  elif [[ $_choice == '4' ]]; then
    _log_tail

  elif [[ $_choice == '5' ]]; then
    _log_remove

  elif [[ $_choice == '11' ]]; then
    _log_msg 'Adding our Craft CMS platform Portal'
    echo "Make sure to type yes to all and name the database 'portal'"
    _nitro_add_himoldeonline_portal

  elif [[ $_choice == '13' ]]; then
    export __cwd=$(pwd)
    cd $WEB_PORTAL_ROOT
    _log_msg "Running $WEB_PORTAL_ROOT/fix_perm.sh"
    source $WEB_PORTAL_ROOT/fix_perm.sh && echo 'Done'
    cd $__cwd
    unset __cwd

  elif [[ $_choice == '9' ]]; then
    if _is_command nitro; then
      echo 'Nitro is alread installed'
    elif ! _is_command nitro; then
      _log_msg 'Installing Nitro'
      echo "Nitro"
      _install_nitro
    fi

  elif [[ $_choice == '10' ]]; then
    _log_msg 'initialization of Nitro'
    _nitro_init_environment

  elif [[ $_choice == '12' ]]; then
    _log_msg "Running composer inside $WEB_PORTAL_ROOT"
    _nitro_portal_composer_install

  elif [[ $_choice == '6' ]]; then
    _install_tutor

  elif [[ $_choice == '7' ]]; then
    if ! _is_command tutor; then
      echo 'Install Tutor first'
    elif _is_command tutor; then
    _log_msg 'Installing Open edX'
    _install_open_edx
    fi

  elif [[ $_choice == '14' ]]; then
    _log_msg "Bind-mounting $EDX_PLATFORM_ROOT into Open edX dev lms and cms containers"
    _bind_mount_edx_platform_source_code

  elif [[ $_choice == '8' ]]; then
    _log_msg 'Creating admin user for Open edX'
    _create_open_edx_admin

  elif [[ $_choice == '15' ]]; then
    _log_msg "Adding  $_HOST_DEV_WEB_PORTAL to docker network: tutor_dev_default"
    docker network connect tutor_dev_default $_HOST_DEV_WEB_PORTAL

  elif [[ $_choice == '16' ]]; then
    _log_msg "Adding  $_HOST_DEV_WEB_PORTAL to docker network: tutor_dev_default"
    docker network disconnect tutor_dev_default $_HOST_DEV_WEB_PORTAL

  elif [[ $_choice == '17' ]]; then
    if ! _file_exist $TUTOR_ENV_ROOT/env/dev/docker-compose.override.yml; then
      echo "You need to bind-mount $EDX_PLATFORM_ROOT into the Open edX lms and cms containers first"
    elif _file_exist $TUTOR_ENV_ROOT/env/dev/docker-compose.override.yml; then
      _log_msg 'Setting Tibe-Theme for Open edX lms and cms containers'
      tutor dev settheme tibetheme $(tutor config printvalue LMS_HOST):8000 $(tutor config printvalue CMS_HOST):8001
    fi

  elif [[ $_choice == '18' ]]; then
    cd $SETUP_ROOT
    git pull
    exit

  elif [[ $_choice == '19' ]]; then
    if ! _is_command code; then
      echo 'Could not find VS-Code in $PATH'
      if [[ $_PLATFORM == Darwin ]]; then
        echo 'This can be fixed by opening VS-Code'
        echo 'Then open the Command Palette (View -> Command Palette)'
        echo 'Type shell command to find Shell Command: Install 'code' command in PATH command'
        echo 'Then re-try this option'
        echo -e 'You can read more about this here\nhttps://code.visualstudio.com/docs/setup/mac#_launching-from-the-command-line'
      else
        echo 'Is VS-Code installed?'
      fi
    else
      cd $WEB_PORTAL_ROOT
      code .
      cd $HOME
    fi

  elif [[ $_choice == '20' ]]; then
    nitro self-update

  elif [[ $_choice == '21' ]]; then
    nitro context

  elif [[ $_choice == '22' ]]; then
    _service_running ssh-agent || _is_command ssh-agent && eval "$(ssh-agent)"
    _service_running ssh-agent && ssh-add $SSH_KEY || echo 'Could not start SSH-Agent'

  elif [[ $_choice == '23' ]]; then
    _url=https://$_HOST_DEV_WEB_PORTAL/admin
    if [[ $_PLATFORM == Linux ]]; then
      if which xdg-open > /dev/null; then
        xdg-open $_url
      elif which gnome-open > /dev/null; then
        gnome-open $_url
      fi
    elif [[ $_PLATFORM == Darwin ]]; then
      open -a /Applications/Safari.app $_url
    fi

  fi
  echo -e '\nPress Enter to continue' && read
}
while [[ true ]]; do _mainloop; done
