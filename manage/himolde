#!/usr/bin/env bash

#~~~~~~~~~~#~~~~~~~~~~#
#
# Author(s):
#   Emil Bratt BÃ¸rsting
#
# Description:
#   This script makes it easy to start/stop the local dev stack for
#   himoldeonline with one command -> $ himolde
#   You must have installed the dev stack with the designated setup-script
#   found in this reposotory
#   The script sources files from this repository using absolute paths
#
# Placement:
#   ~/.local/bin/himolde
#
#~~~~~~~~~~#~~~~~~~~~~#

export _LIB_DIR=~/himoldeonline/himoldeonline_setup_source/himoldeonline-setup/lib
export _HIMOLDE_LIB_DIR=~/himoldeonline/himoldeonline_setup_source/himoldeonline-setup/manage/lib
source $_LIB_DIR/display.sh || exit 1
source $_LIB_DIR/validate.sh || exit 1
source $_LIB_DIR/system.sh || exit 1
source $_LIB_DIR/paths.sh || exit 1
source $_LIB_DIR/repositories.sh || exit 1
source $_LIB_DIR/log.sh || exit 1
source $_LIB_DIR/hostnames.sh || exit 1
source $_HIMOLDE_LIB_DIR/tutor.sh || exit 1
source $_HIMOLDE_LIB_DIR/nitro.sh || exit 1


### Start ##################
clear
_log_init 'manage.log' "$HOME/himoldeonline/logs"
_banner '### Manage Script for HiMolde-Online Developement Environment ###'


_mainloop () {
  _list_options \
    '1. Start HiMoldeonline Containers' \
    '2. Stop HiMoldeonline Containers'  \
    '3. List Running Containers'  \
    '4. Read logfile'  \
    '5. Clean up logfile'  \
    "6. Install Tutor"  \
    "7. Install Open edX" \
    "8. Create admin user for Open edX" \
    '9. Install Nitro'  \
    '10. initialization of Nitro'  \
    "11. Add page $WEB_PORTAL_ROOT to nitro"  \
    "12. Fix write permission for PHP in $WEB_PORTAL_ROOT/" \
    "13. Run composer for $WEB_PORTAL_ROOT"  \
    '0. Exit'

  read _choice

  if [[ $_choice == '0' ]]; then
    _banner '# Exit HiMoldeonline #'
    exit 0

  elif [[ $_choice == '1' ]]; then
    _banner '# Starting Containers #'
    _log_msg 'Starting HiMoldeonline Containers'
    tutor dev start --detach && sleep 2 &&
    nitro start && sleep 2 &&
    docker network connect tutor_dev_default $_HOST_DEV_WEB_PORTAL &&
    _log_msg 'OK'

  elif [[ $_choice == '2' ]]; then
    _banner '# Stopping Containers #'
    _log_msg 'Stopping HiMoldeonline Containers'
    nitro stop && sleep 2 &&
    tutor dev stop && sleep 2 &&
    _log_msg 'OK'

  elif [[ $_choice == '3' ]]; then
    if ! eval "docker ps | grep -q nitro" && ! eval "docker ps | grep -q tutor_"
    then
      echo 'There are no HiMolde containers running'
    else
      docker ps --filter 'name=tutor_dev' --filter 'name=nitro'
    fi

  elif [[ $_choice == '4' ]]; then
    _log_tail

  elif [[ $_choice == '5' ]]; then
    _log_remove

  elif [[ $_choice == '11' ]]; then
    _log_msg 'Adding our Craft CMS platform Portal'
    echo "Make sure to type yes to all and name the database 'portal'"
    _nitro_add_himoldeonline_portal

  elif [[ $_choice == '12' ]]; then
    export __cwd=$(pwd)
    cd $WEB_PORTAL_ROOT
    _log_msg "Running $WEB_PORTAL_ROOT/fix_perm.sh"
    source $WEB_PORTAL_ROOT/fix_perm.sh && echo 'Done'
    cd $__cwd
    unset __cwd

  elif [[ $_choice == '9' ]]; then
    if _is_command nitro; then
      echo 'Nitro is alread installed'
    elif ! _is_command nitro; then
      _log_msg 'Installing Nitro'
      echo "Nitro"
      _install_nitro
    fi

  elif [[ $_choice == '10' ]]; then
    _log_msg 'initialization of Nitro'
    _nitro_init_environment

  elif [[ $_choice == '13' ]]; then
    _log_msg "Running composer inside $WEB_PORTAL_ROOT"
    _nitro_portal_composer_install

  elif [[ $_choice == '6' ]]; then
    _install_tutor

  elif [[ $_choice == '7' ]]; then
    if ! _is_command tutor; then
      echo 'Install Tutor first'
    elif _is_command tutor; then
    _log_msg 'Installing Open edX'
    _install_open_edx
    fi
    
  elif [[ $_choice == '8' ]]; then
    _log_msg 'Creating admin user for Open edX'
    _create_open_edx_admin
  fi
}
while [[ true ]]; do _mainloop; done
